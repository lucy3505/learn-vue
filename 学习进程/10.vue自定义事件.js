/*

    所有事件都有2个操作(无论是原生的事件还是自定义事件)，如果是原生的就必须是特定的名字，自定义的就可以任意命名
    1）绑定事件监听
    原生/自定义：必须执行特定的绑定事件监听的代码
    ?需要指定什么东西？
    a.事件名/类型   点击界面2下，都触发了点击事件，但里面的数据不一样，event不一样
        原生DOM事件，我们去绑定事件监听，不管用什么写(vue,jq,react)，最终都指定了事件名,指定了回调函数
    b.回调函数：在分发事件时执行，可以接收到传递的数据.eventd对象就是数据，是所有数据对象的封装体


    2）触发/分发事件（这个要区分事件循环机制，两码事）
    ?触发/分发事件谁来做
    ``原生：
        当用户对标签元素的界面做特定操作（点击等）时，浏览器会自动分发对应名称的事件，给了event对象，这个就是数据的分发并根据操作封装包含所有相关信息数据的对象event
    a.事件名/类型
    b.数据
    ``自定义的：必须执行特定的分发事件的代码：dispath/emit('事件名'，data)
    浏览器不会自动帮你分发

        这个绑定监听的操作必然发生在父组件身上，因为只有父组件才有这个组件的标签
        谁绑定监听谁来触发事件,父组件来绑定监听
        ``子组件this.$emit（）分发事件
        这种只用来子组件向父组件通信
        但可以用来实现任意组件监听


        ?有没有绑定监听的方法，找API
        ?JQ中的绑定监听用什么名字
        on(evnets,[selector],[data],fn) 通用的绑定监听的方法

        原生里有addEventListener绑定任何监听都可以
        1.父组件中直接给子组件绑定监听
        <my-component v-on:my-event="doSomething"></my-component>
            子组件用this.$emit('myEmit')分发时间
                $说明是实例的方法

        vue中绑定监听的方法
        vm.$on(event,callback)
        这个vm也可以是组件对象
        可以在父组件里给子组件绑定监听，在子组件内部分发事件，回调函数是定义在父组件
        这个功能可以取代函数props

        可以利用vue的自定义事件实现任意组件间的通信

           <Header @addTodo="addTodo" />
        孙向祖传递，没法用@addTodo这种方式，因为看不到孙子
        ``用@很舒服也很简单，绑定监听有两种方式，一种是@，还有一种是$on
        ?$on肯定是父组件上绑，就像@一样，那什么时候绑呢
        绑定事件监听什么时候绑？绑定事件监听是个什么操作，异步操作
        在mounted里面绑定
              this.$on这样是给App这个实例绑定监听，而不是给header绑定监听
                this.$refs.header.$on("addTodo", this.addTodo); //this.addTodo不要加（），因为你是指定操作，不是调用操作
                这个方式没有直接在<Header @addTodo=addTodo />简单，但也是可以
            这样写也只能是子向父传递

*/